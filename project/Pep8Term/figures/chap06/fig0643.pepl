-------------------------------------------------------------------------------
      Object
Addr  code   Symbol   Mnemon  Operand       Comment
-------------------------------------------------------------------------------
             ;File: fig0643.pep
             ;Computer Systems, Fourth edition
             ;Figure 6.43
             ;
0000  040003          BR      main          
             ;
             ;******* main ()
             a:       .EQUATE 4             ;local variable #2h
             b:       .EQUATE 2             ;local variable #2h
             c:       .EQUATE 0             ;local variable #2h
0003  680006 main:    SUBSP   6,i           ;allocate #a #b #c
0006  C00002          LDA     2,i           ;a = new int
0009  16006A          CALL    new           ;#a
000C  EB0004          STX     a,s           
000F  C00005          LDA     5,i           ;*a = 5
0012  E40004          STA     a,sf          
0015  C00002          LDA     2,i           ;b = new int
0018  16006A          CALL    new           ;#b
001B  EB0002          STX     b,s           
001E  C00003          LDA     3,i           ;*b = 3
0021  E40002          STA     b,sf          
0024  C30004          LDA     a,s           ;c = a
0027  E30000          STA     c,s           
002A  C30002          LDA     b,s           ;a = b
002D  E30004          STA     a,s           
0030  C00002          LDA     2,i           ;*a = 2 + *c
0033  740000          ADDA    c,sf          
0036  E40004          STA     a,sf          
0039  410058          STRO    msg0,d        ;cout << "*a = "
003C  3C0004          DECO    a,sf          ;   << *a
003F  50000A          CHARO   '\n',i        ;   << endl
0042  41005E          STRO    msg1,d        ;cout << "*b = "
0045  3C0002          DECO    b,sf          ;   << *b
0048  50000A          CHARO   '\n',i        ;   << endl
004B  410064          STRO    msg2,d        ;cout << "*c = "
004E  3C0000          DECO    c,sf          ;   << *c
0051  50000A          CHARO   '\n',i        ;   << endl
0054  600006          ADDSP   6,i           ;deallocate #c #b #a
0057  00              STOP                  
0058  2A6120 msg0:    .ASCII  "*a = \x00"   
      3D2000 
005E  2A6220 msg1:    .ASCII  "*b = \x00"   
      3D2000 
0064  2A6320 msg2:    .ASCII  "*c = \x00"   
      3D2000 
             ;
             ;******* operator new
             ;        Precondition: A contains number of bytes
             ;        Postcondition: X contains pointer to bytes
006A  C90074 new:     LDX     hpPtr,d       ;returned pointer
006D  710074          ADDA    hpPtr,d       ;allocate from heap
0070  E10074          STA     hpPtr,d       ;update hpPtr
0073  58              RET0                  
0074  0076   hpPtr:   .ADDRSS heap          ;address of next free byte
0076  00     heap:    .BLOCK  1             ;first byte in the heap
0077                  .END                  
-------------------------------------------------------------------------------


Symbol table
--------------------------------------
Symbol    Value        Symbol    Value
--------------------------------------
a         0004         b         0002
c         0000         heap      0076
hpPtr     0074         main      0003
msg0      0058         msg1      005E
msg2      0064         new       006A
--------------------------------------
